// <auto-generated />
using System;
using EFDataAccessLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFDataAccessLibrary.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20210128083603_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EFDataAccessLibrary.Models.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Collected_On")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("Humidity")
                        .HasColumnType("tinyint");

                    b.Property<float?>("Temperature")
                        .HasColumnType("real");

                    b.Property<int>("WeatherSensorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeatherSensorId");

                    b.ToTable("WeatherDatas");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.WeatherSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Location")
                        .IsUnique();

                    b.ToTable("WeatherSensors");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.WeatherData", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Models.WeatherSensor", "WeatherSensor")
                        .WithMany("WeatherDatas")
                        .HasForeignKey("WeatherSensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherSensor");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.WeatherSensor", b =>
                {
                    b.Navigation("WeatherDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
